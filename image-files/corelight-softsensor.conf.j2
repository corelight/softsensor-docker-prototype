# You only need to set the following value if the hostname the system has already is
# not an acceptable name to use in the logs and other export locations.
#Corelight::system_name
{% if CORELIGHT_SYSTEM_NAME is defined %}
Corelight::system_name        {{ CORELIGHT_SYSTEM_NAME }}
{% endif %}

# Below is an example "sniff" option.  Interfaces are separated with commas and the number
# of workers is optionally specified after the interface with a tilde (~).
# If the "corelight" process is already started, once this option is configured, the cluster
# will automatically start up. You don't need to take any additional action.
#Corelight::sniff             eth0~4,eth1~2
Corelight::sniff              {{ CORELIGHT_SNIFF_INTERFACES|d('eth0') }}~{{ CORELIGHT_WORKERS|d('2') }}

# Corelight::disk_space is the base directory or directory root for the Software Sensor.  All relative
# paths configured below will be based on this directory.
# You likely don't want to change this. By default, the packaged (RPM/DEB) versions of
# the Corelight Software Sensor create this location.
#Corelight::disk_space        /var/corelight

# If you would like to avoid sharing stats with Corelight for debugging and health
# monitoring purposes, change this value to "F".
Corelight_Cloud::share_stats  {{ CORELIGHT_CLOUD_SHARE_STATS|d('T') }}

# Local networks
Site::local_nets              {{ CORELIGHT_LOCAL_NETS|d('10.0.0.0/8,192.168.0.0/16,172.16.0.0/12,100.64.0.0/10,127.0.0.0/8,fe80::/10,::1/128') }}

# Zeek script(s) to load. This can normally be left alone and you can edit the local.zeek
# script to load additional scripts.
Corelight::load_scripts       {{ CORELIGHT_LOAD_SCRIPTS|d('/etc/corelight/local.zeek') }}

# A BPF filter of traffic that you would like to ignore.
Corelight::ignore_bpf         {{ CORELIGHT_IGNORE_BPF|d('') }}

# The amount of memory in Megabytes that you'd like to set as a maximum allowed per process.
# This can prevent accidental script mistakes or unexpected side effects from completely taking
# over all memory on your system.
Corelight::memory_limit_mb    {{ CORELIGHT_MEMORY_LIMIT_MB|d('6500') }}


#####################
# Suricata Settings #
#####################

# Enable or disable Suricata
Suricata::enable              {{ SURICATA_ENABLE|d('F') }}

# The absolute path to the directory where your rule files are stored.
Suricata::rule_path           {{ SURICATA_RULE_PATH|d('/etc/corelight/rules/') }}

# A list of rules to load from the Suricata::rule_path directory.
Suricata::rule_files          {{ SURICATA_RULE_FILES|d('*.rules') }}


#############################################
# Analyzer Specific Settings                #
#############################################

### WARNING!  This is a beta feature! ###
# Enable the beta archive expansion plugin.
# This will cause the Software Sensor to dig further into archive files like Zips and tar.gz.
Corelight::archive_expand_enable  {{ CORELIGHT_ARCHIVE_EXPAND_ENABLE|d('F') }}

#############################################
# Streaming Exporter configs are below here #
#############################################

# JSON into Splunk's HEC (HTTP Event Collector) API
Corelight::hec_enable             {{ CORELIGHT_HEC_ENABLE|d('F') }}
Corelight::hec_url                {{ CORELIGHT_HEC_URL|d('https://mysplunk.com:8088/services/collector') }}
Corelight::hec_token              {{ CORELIGHT_HEC_TOKEN|d('') }}
Corelight::hec_sourcetype_prefix  {{ CORELIGHT_HEC_SOURCETYPE_PREFIX|d('corelight_') }}
Corelight::hec_verify_cert        {{ CORELIGHT_HEC_VERIFY_CERT|d('T') }}

# JSON to a Kafka server
Corelight::kafka_enable           {{ CORELIGHT_KAFKA_ENABLE|d('F') }}
Corelight::kafka_servers          {{ CORELIGHT_KAFKA_SERVERS|d('1.2.3.4:9092') }}
Corelight::kafka_topic_prefix     {{ CORELIGHT_KAFKA_TOPIC_PREFIX|d('') }}
Corelight::kafka_enable_ssl       {{ CORELIGHT_KAFKA_ENABLE_SSL|d('T') }}
Corelight::kafka_sasl_username    {{ CORELIGHT_KAFKA_SASL_USERNAME|d('') }}
Corelight::kafka_sasl_password    {{ CORELIGHT_KAFKA_SASL_PASSWORD|d('') }}
Corelight::kafka_ssl_ca_location  {{ CORELIGHT_KAFKA_SSL_CA_LOCATION|d('') }}

# JSON over TCP export
Corelight::json_enable            {{ CORELIGHT_JSON_ENABLE|d('F') }}
Corelight::json_server            {{ CORELIGHT_JSON_SERVER|d('1.2.3.4:12345') }}

# JSON over TCP syslog export
Corelight::syslog_enable          {{ CORELIGHT_SYSLOG_ENABLE|d('F') }}
Corelight::syslog_server          {{ CORELIGHT_SYSLOG_SERVER|d('1.2.3.4:514') }}
# This is a lower case syslog priority
Corelight::syslog_facility        {{ CORELIGHT_SYSLOG_FACILITY|d('local0') }}
# This is a lower case syslog severity
Corelight::syslog_severity        {{ CORELIGHT_SYSLOG_SEVERITY|d('info') }}
# Valid optons are rfc5424_octet_framing, rfc5424_non_transparent, or rfc3164
Corelight::syslog_format          {{ CORELIGHT_SYSLOG_FORMAT|d('rfc5424_octet_framing') }}

# JSON to a redis server.  This can only use the RPUSH command right now.
Corelight::redis_enable           {{ CORELIGHT_REDIS_ENABLE|d('F') }}
Corelight::redis_host             {{ CORELIGHT_REDIS_HOST|d('127.0.0.1') }}
Corelight::redis_port             {{ CORELIGHT_REDIS_PORT|d('6379') }}
Corelight::redis_password         {{ CORELIGHT_REDIS_PASSWORD|d('') }}
# A string that will be prepended to the path name.  If you don't want it, you can leave this field blank.
Corelight::redis_key_prefix       {{ CORELIGHT_REDIS_KEY_PREFIX|d('corelight-') }}

####################################
# Batch Log configs are below here #
####################################

# Global settings for batch logs
# This group of settings is not dynamic at the moment and the software sensor must
# be restarted in order to apply them.
Corelight::batch_log_format                   {{ CORELIGHT_BATCH_LOG_FORMAT|d('json') }}
Corelight::batch_log_rotation_interval        {{ CORELIGHT_BATCH_LOG_ROTATION_INTERVAL|d('3600') }}
Corelight::batch_log_gzip                     {{ CORELIGHT_BATCH_LOG_GZIP|d('F') }}

# Enable/disable writing logs to the disk file system
#  T: Write batch logs to the disk file system, with rotation
#  F: Don't write any logs to the disk file system at all
Corelight::batch_log_disk_enable              {{ CORELIGHT_BATCH_LOG_DISK_ENABLE|d('T') }}
# If this is a absolute path it will extract there, if relative, it is relative to the base directory
# defined above with (Corelight::disk_space).
Corelight::batch_log_disk_path                {{ CORELIGHT_BATCH_LOG_DISK_PATH|d('./logs') }}
# Enable this to make the software sensor automatically maintain disk utilization (only if batch_log_disk_enable is T)
Corelight::batch_log_disk_cleanup_enable      {{ CORELIGHT_BATCH_LOG_DISK_CLEANUP_ENABLE|d('F') }}
# Keep disk usage at the specified log storage location under a specified percentage.
Corelight::batch_log_disk_cleanup_pct_max     {{ CORELIGHT_BATCH_LOG_DISK_CLEANUP_PCT_MAX|d('80') }}

# Batch log export over SFTP
Corelight::batch_log_ssh_enable               {{ CORELIGHT_BATCH_LOG_SSH_ENABLE|d('F') }}
# Following option are for "sftp"
Corelight::batch_log_ssh_mode                 {{ CORELIGHT_BATCH_LOG_SSH_MODE|d('sftp') }}
Corelight::batch_log_ssh_server               {{ CORELIGHT_BATCH_LOG_SSH_SERVER|d('1.2.3.4') }}
Corelight::batch_log_ssh_port                 {{ CORELIGHT_BATCH_LOG_SSH_PORT|d('22') }}
Corelight::batch_log_ssh_user                 {{ CORELIGHT_BATCH_LOG_SSH_USER|d('username') }}
# Leave this empty is doing key based authentication
Corelight::batch_log_ssh_password             {{ CORELIGHT_BATCH_LOG_SSH_PASSWORD|d('') }}
# Point to a privkey file on disk or encode the privkey directy in this variable hex escaped. (i.e. \xFF)
Corelight::batch_log_ssh_privkey              {{ CORELIGHT_BATCH_LOG_SSH_PRIVKEY|d('') }}
# Leave this empty if the key has no passphrase
Corelight::batch_log_ssh_privkey_passphrase   {{ CORELIGHT_BATCH_LOG_SSH_PRIVKEY_PASSPHRASE|d('') }}
# Path on the remote file system to write logs.  If relative path given, it will be relative to remote users home dir.
Corelight::batch_log_ssh_path                 {{ CORELIGHT_BATCH_LOG_SSH_PATH|d('./corelight_logs') }}


#########################################
# Extracted File configs are below here #
#########################################

# Global settings for extracted files
Corelight::extracted_files_max_bytes                {{ CORELIGHT_EXTRACTED_FILES_MAX_BYTES|d('5242880') }}
# This is an additional way to provide a way to limit files that get extracted based on the "Corelight Filter Language"
#   Documentation for this variable and the language is forthcoming.
Corelight::extracted_files_filter                   {{ CORELIGHT_EXTRACTED_FILES_FILTER|d('') }}

# Global settings to define the types of files to extract.
# Supported MIME types can be seen here: https://github.com/zeek/zeek/tree/master/scripts/base/frameworks/files/magic
# Specify desired mimetypes as a comma separated list and here is an example below:
#Corelight::extracted_files_mime_types             image/jpeg,text/html
Corelight::extracted_files_mime_types               {{ CORELIGHT_EXTRACTED_FILES_MIME_TYPES|d('') }}
# These are groups of mimetypes and are added to any mime types above.
Corelight::extracted_files_group_archives           {{ CORELIGHT_EXTRACTED_FILES_GROUP_ARCHIVES|d('T') }}
Corelight::extracted_files_group_executables        {{ CORELIGHT_EXTRACTED_FILES_GROUP_EXECUTABLES|d('T') }}
Corelight::extracted_files_group_flash              {{ CORELIGHT_EXTRACTED_FILES_GROUP_FLASH|d('T') }}
Corelight::extracted_files_group_java               {{ CORELIGHT_EXTRACTED_FILES_GROUP_JAVA|d('T') }}
Corelight::extracted_files_group_office_documents   {{ CORELIGHT_EXTRACTED_FILES_GROUP_OFFICE_DOCUMENTS|d('T') }}
Corelight::extracted_files_group_pdfs               {{ CORELIGHT_EXTRACTED_FILES_GROUP_PDFS|d('T') }}

# Extracted file export to local file system
Corelight::extracted_files_disk_enable              {{ CORELIGHT_EXTRACTED_FILES_DISK_ENABLE|d('F') }}
# If this is a absolute path it will extract there, if relative, it is relative to the base directory
# defined above with (Corelight::disk_space).
Corelight::extracted_files_disk_directory           {{ CORELIGHT_EXTRACTED_FILES_DISK_DIRECTORY|d('./extracted_files') }}
# Enable this to make the software sensor automatically maintain disk utilization. (only if extracted_files_disk_enable is T)
Corelight::extracted_files_disk_cleanup_enable      {{ CORELIGHT_EXTRACTED_FILES_DISK_CLEANUP_ENABLE|d('F') }}
# Keep disk usage at the specified file extraction location under a specified percentage.
Corelight::extracted_files_disk_cleanup_pct_max     {{ CORELIGHT_EXTRACTED_FILES_DISK_CLEANUP_PCT_MAX|d('80') }}

# Extracted file export over SFTP
Corelight::extracted_files_ssh_enable               {{ CORELIGHT_EXTRACTED_FILES_SSH_ENABLE|d('F') }}
# Following options are for "sftp"
Corelight::extracted_files_ssh_mode                 {{ CORELIGHT_EXTRACTED_FILES_SSH_MODE|d('sftp') }}
Corelight::extracted_files_ssh_server               {{ CORELIGHT_EXTRACTED_FILES_SSH_SERVER|d('1.2.3.4') }}
Corelight::extracted_files_ssh_port                 {{ CORELIGHT_EXTRACTED_FILES_SSH_PORT|d('22') }}
Corelight::extracted_files_ssh_user                 {{ CORELIGHT_EXTRACTED_FILES_SSH_USER|d('username') }}
# Leave this empty is doing key based authentication
Corelight::extracted_files_ssh_password             {{ CORELIGHT_EXTRACTED_FILES_SSH_PASSWORD|d('') }}
# Point to a privkey file on disk or encode the privkey directy in this variable hex escaped. (i.e. \xFF)
Corelight::extracted_files_ssh_privkey              {{ CORELIGHT_EXTRACTED_FILES_SSH_PRIVKEY|d('') }}
# Leave this empty if the key has no passphrase
Corelight::extracted_files_ssh_privkey_passphrase   {{ CORELIGHT_EXTRACTED_FILES_SSH_PRIVKEY_PASSPHRASE|d('') }}
# Path on the remote file system to write files.  If relative path given, it will be relative to remote users home dir.
Corelight::extracted_files_ssh_path                 {{ CORELIGHT_EXTRACTED_FILES_SSH_PATH|d('./corelight_extracted_files') }}


###############################
# Metrics Data Export config  #
###############################

# Prometheus metrics export
CorelightMetrics::prometheus_enable                 {{ CORELIGHT_METRICS_PROMETHEUS_ENABLE|d('F') }}
# Set to T in order to produce metrics per process instead of overall totals.
CorelightMetrics::prometheus_metrics_per_process    {{ CORELIGHT_METRICS_PROMETHEUS_METRICS_PER_PROCESS|d('F') }}
CorelightMetrics::prometheus_listen                 {{ CORELIGHT_METRICS_PROMETHEUS_LISTEN|d('127.0.0.1:8989') }}
